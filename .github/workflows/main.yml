name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: ap-southeast-1
  EC2_HOST: 54.251.203.73
  GO_VERSION: 1.21

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}
          
      - name: Run tests
        run: go test -v ./...

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY_URL }}:$IMAGE_TAG .
          docker push ${{ secrets.ECR_REPOSITORY_URL }}:$IMAGE_TAG

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        env:
          IMAGE_TAG: ${{ github.sha }}
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem ec2-user@${{ env.EC2_HOST }} "\
            aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URL }} && \
            docker pull ${{ secrets.ECR_REPOSITORY_URL }}:$IMAGE_TAG && \
            docker stop identity-service || true && \
            docker rm identity-service || true && \
            docker run -d \
              --name identity-service \
              -p 4000:4000 \
              --restart unless-stopped \
              ${{ secrets.ECR_REPOSITORY_URL }}:$IMAGE_TAG" 